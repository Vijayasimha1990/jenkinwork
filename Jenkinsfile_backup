#!groovy
import java.text.SimpleDateFormat;
import java.text.DateFormat;
// pipeline config
def javaAgent = 'master'

// project config
def commit
def branch
def repo
def uname
def pword
// pipeline
node(javaAgent) {
		properties([
            [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator',daysToKeepStr: '1', numToKeepStr: '4']],
            parameters([
                    choice(
                            choices: ["test", "production"].join("\n"),
                            defaultValue: 'test',
                            description: 'Couchbase Backup',
                            name: 'couchbaseBackup'
                    )
            ])
    ])
	//Fetching credentials for respective environment
			withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'couchbase',
                		usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
					uname = env.USERNAME
					pword = env.PASSWORD
			
			}
	try {
        stage('Collect info') {
            checkout scm
            branch = env.BRANCH_NAME
            commit = git.getCommitId()
            repo = git.getOriginUrl()
        }
		stage('backup'){
        //we wait two minutes to make sure that the service is up and running
       sleep 120
			}
			if (params.couchbaseBackup == 'test'){
				pcCouchbase.backup environment:params.couchbaseBackup, deployToMachine: deployMaster,username : uname, password :pword
			}
			if (params.couchbaseBackup == 'production'){
				pcCouchbase.backup environment:params.couchbaseBackup, deployToMachine: deployMaster,username : uname, password :pword
			}
			
		}	
    } catch (def e) {
        currentBuild.result = 'FAILURE'
    }
}
